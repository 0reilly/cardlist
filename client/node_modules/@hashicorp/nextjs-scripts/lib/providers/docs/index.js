"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tabs = exports.createMdxProvider = void 0;
const style_module_css_1 = __importDefault(require("./style.module.css"));
const react_1 = __importDefault(require("react"));
const react_2 = require("@mdx-js/react");
const react_enterprise_alert_1 = __importDefault(require("@hashicorp/react-enterprise-alert"));
const react_tabs_1 = __importStar(require("@hashicorp/react-tabs"));
// This function returns a simple object containing the default components
// The `additionalComponents` param is purely for convenience.
// It is intended for use with `next-mdx-remote`.
function defaultMdxComponents({ product, additionalComponents = {}, }) {
    return Object.assign(_defaultComponents(product), additionalComponents);
}
exports.default = defaultMdxComponents;
// This function returns an MDXProvider that can be used when rendering
// within an mdx layout.
// It is intended for use with `next-mdx-enhanced`. Once we no longer use
// `next-mdx-enhanced` on any of our properties, it will be depreated.
function createMdxProvider({ product, additionalComponents = {} }) {
    const allComponents = Object.assign(_defaultComponents(product), additionalComponents);
    return function CustomMDXProvider({ children }) {
        return react_1.default.createElement(react_2.MDXProvider, { components: allComponents }, children);
    };
}
exports.createMdxProvider = createMdxProvider;
// Purely for sharing between the two functions. Once `createMdxProvider` is
// deprecated, this can be moved inline.
function _defaultComponents(product) {
    return { Tabs, Tab: react_tabs_1.Tab, EnterpriseAlert: createEnterpriseAlert(product) };
}
//
// Base components need to be slightly modified to fit this context
//
// Enterprise alert gets the "product" prop defaulted
function createEnterpriseAlert(product) {
    return function EnterpriseAlert(props) {
        return react_1.default.createElement(react_enterprise_alert_1.default, Object.assign({ product: product }, props));
    };
}
// Tabs is a general-purpose component that we format for ease of use within mdx
// It is also wrapped in a span with a css module class for styling overrides
function Tabs({ defaultTabIdx, children }) {
    if (!Array.isArray(children))
        throw new Error('Multiple <Tab> elements required');
    return (react_1.default.createElement("span", { className: style_module_css_1.default.tabsRoot },
        react_1.default.createElement(react_tabs_1.default, { defaultTabIdx: defaultTabIdx }, children)));
}
exports.Tabs = Tabs;
