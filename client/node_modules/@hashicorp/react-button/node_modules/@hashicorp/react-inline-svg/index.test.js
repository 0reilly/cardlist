import React from 'react'
import { render, screen } from '@testing-library/react'
import '@testing-library/jest-dom/extend-expect'
import InlineSvg from './dist/index'
import propsSpec from './props'

const defaultProps = global.propSpecToObj(propsSpec.default)

defaultProps.className = 'sample-class'

describe('<InlineSvg />', () => {
  it('should render an svg and any additional props', () => {
    render(<InlineSvg {...defaultProps} />)
    const inlineSvg = screen.getByTestId('root')
    expect(inlineSvg).toBeInTheDocument()

    // because the svg is set as dangerouslySetInnerHTML, it's not processed as a child
    // we have to look within the whole document versus within the containing element
    if (defaultProps.src) {
      const svgElement = document.querySelector('svg')
      expect(svgElement).toBeInTheDocument()
    }

    Object.keys(defaultProps).forEach((prop) => {
      // src is passed through dangerouslySetInnerHTML, not as a typical prop
      if (prop !== 'src') {
        expect(inlineSvg[prop]).toMatch(defaultProps[prop])
      }
    })
  })
})
