{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/Tap.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport OrderFinder from '../apis/OrderFinder';\nimport EmailPoster from '../apis/EmailPoster';\nimport Cards from '../apis/Cards';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CardForm from './CardForm';\nimport PayButton from './PayButton';\n\nconst Tap = () => {\n  const {\n    id\n  } = useParams(); //from server response\n\n  const [items, setItems] = useState([]);\n  const [acctID, setAcctId] = useLocalStorage(\"acctID\", \"\");\n  const [storeName, setStoreName] = useState(\"\");\n  const [successURL, setSuccessURL] = useState(\"\");\n  const [returnURL, setReturnURL] = useState(\"\");\n  const [subtotal, setSubtotal] = useState(0);\n  const [shipping, setShipping] = useState(0);\n  const [taxes, setTaxes] = useState(0);\n  const [total, setTotal] = useState(0); //pay button\n\n  const [disabled, setDisabled] = useState(true);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(''); //billing fields\n\n  const [name, setName] = useState(\"\");\n  const [addressOne, setAddressOne] = useState(\"\");\n  const [addressTwo, setAddressTwo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\"); //from customer\n\n  const [email, setEmail] = useLocalStorage(\"email\", \"\");\n  const [fullName, setFullName] = useLocalStorage(\"\");\n  const [emailEntered, setEmailEntered] = useLocalStorage('emailEntered', false);\n  const [newCardForm, setNewCardForm] = useLocalStorage(); //from stripe\n\n  const [promise, setPromise] = useState(() => loadStripe(\"pk_test_51HX92ADV5bqQz6pNUHpNfJziKCFf5lOBPO6A30apaEDI0Yb0jvwOmQCcebkay4TIcs2JIsrNxQs9vN8NImlsaevO0030bqBsJQ\"));\n  const [cusID, setCusID] = useLocalStorage(\"\");\n  const [paymentMethods, setPaymentMethods] = useState([]);\n  const [billing, setBilling] = useLocalStorage({});\n  const [billingExists, setBillingExists] = useLocalStorage('billingExists', false);\n  const [clientSecret, setClientSecret] = useState();\n  const [selectedCard, setSelectedCard] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await OrderFinder.get(\"/\" + id);\n        setItems(response.data.data.items);\n        setAcctId(response.data.data.order[0].acctid);\n        setStoreName(response.data.data.order[0].storename);\n        setSubtotal(response.data.data.order[0].subtotal);\n        setShipping(response.data.data.order[0].shipping);\n        setTaxes(response.data.data.order[0].taxes);\n        setTotal(response.data.data.order[0].total);\n        setSuccessURL(response.data.data.order[0].successURL);\n        setReturnURL(response.data.data.order[0].returnurl);\n      } catch (err) {\n        console.log(err);\n      } //look up billing info \n\n\n      try {\n        const response = await EmailPoster.post(\"/check/\", {\n          email\n        });\n        setCusID(response.data.data.customer.id);\n\n        if (response.data.data.customer.name != null) {\n          console.log(\"setting billing: \" + JSON.stringify(response.data.data));\n          setBilling(response.data.data);\n          setBillingExists(true); //if billing, look up cards\n\n          try {\n            const cards = await Cards.post(\"/\", {\n              id: response.data.data.customer.id\n            });\n            console.log(\"cards: \" + JSON.stringify(cards.data.data.paymentMethods.data));\n\n            if (cards.data.data.paymentMethods.data.length > 0) {\n              setNewCardForm(false);\n              setPaymentMethods(cards.data.data.paymentMethods.data);\n            } else {\n              console.log(\"card form true \");\n              setNewCardForm(true);\n            }\n          } catch (err) {\n            console.log(err);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleEmailSet = async () => {\n    try {\n      const response = await EmailPoster.post(\"/check/\", {\n        email\n      });\n      console.log(\"cusID: \" + response.data.data.customer.id);\n      setCusID(response.data.data.customer.id);\n\n      if (response.data.data.customer.name != null) {\n        setBilling(response.data.data);\n        setBillingExists(true); //if billing, look up cards\n\n        try {\n          const cards = await Cards.post(\"/\", {\n            id: response.data.data.customer.id\n          });\n\n          if (cards.data.data.paymentMethods.data.length > 0) {\n            console.log(\"card form false\");\n            setNewCardForm(false);\n            setPaymentMethods(cards.data.data.paymentMethods.data);\n          } else {\n            console.log(\"card form true \");\n            setNewCardForm(true);\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setEmail(email);\n    setEmailEntered(true);\n  };\n\n  const handleSetBilling = async () => {\n    console.log(name);\n\n    try {\n      const response = await EmailPoster.post(\"/billing/\", {\n        id: cusID,\n        name,\n        address: {\n          line1: addressOne,\n          line2: addressTwo,\n          city,\n          state,\n          postal_code: zip\n        }\n      });\n      setBilling(response.data.data);\n      setBillingExists(true);\n\n      try {\n        const cards = await Cards.post(\"/\", {\n          id: response.data.data.customer.id\n        });\n\n        if (cards.data.data.paymentMethods.data != null) {\n          setPaymentMethods(cards.data.data.paymentMethods.data);\n        } else {\n          setNewCardForm(true);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } catch (err) {} //load saved cards\n\n  };\n\n  const editEmail = async () => {\n    setCusID(\"\");\n    setEmailEntered(false);\n    setEmail(\"\");\n    setBilling([]);\n    setBillingExists(false);\n    setPaymentMethods([]);\n  };\n\n  const editBilling = async () => {\n    setBillingExists(false);\n  };\n\n  const cancelEditBilling = async () => {\n    setBillingExists(true);\n  }; // Hook\n\n\n  function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    }); // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n        setStoredValue(valueToStore); // Save to local storage\n\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n\n    return [storedValue, setValue];\n  }\n\n  function isNumeric(n) {\n    return !isNaN(parseInt(n)) && isFinite(n);\n  }\n\n  const handleForm = async () => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, \"\\\"storeName\\\"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, emailEntered ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4 mb-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 51\n    }\n  }, email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    onClick: editEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 62\n    }\n  }, \"edit\"))), billingExists ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 54\n    }\n  }, billing.customer.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 54\n    }\n  }, billing.customer.address.line1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 54\n    }\n  }, billing.customer.address.line2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 54\n    }\n  }, billing.customer.address.city)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 54\n    }\n  }, billing.customer.address.state)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 54\n    }\n  }, billing.customer.address.zip))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: editBilling,\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 66\n    }\n  }, \"edit\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }, \"Enter Billing Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: addressOne,\n    onChange: e => setAddressOne(e.target.value),\n    placeholder: \"Address Line 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: addressTwo,\n    onChange: e => setAddressOne(e.target.value),\n    placeholder: \"Address Line 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: state,\n    onChange: e => setState(e.target.value),\n    placeholder: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: city,\n    onChange: e => setCity(e.target.value),\n    placeholder: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: zip,\n    onChange: e => setZip(e.target.value),\n    placeholder: \"Zip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSetBilling,\n    className: \"btn btn-primary  btn-block \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 63\n    }\n  }, \"Save Address\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 33\n    }\n  }, billing ? null : billing.customer.name != false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 90\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cancelEditBilling,\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 127\n    }\n  }, \"cancel\")) : null)))), newCardForm && billingExists ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4 mb-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 29\n    }\n  }, \"Save a New Card\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 29\n    }\n  }, \"so you don't have to enter it next time!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    stripe: promise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardForm, {\n    setClientSecret: setClientSecret,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 29\n    }\n  })), paymentMethods.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setNewCardForm(false),\n    className: \"btn btn-link d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 80\n    }\n  }, \"Back to Saved Cards\")) : null)) : billingExists && !newCardForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center mt-4 mb-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 33\n    }\n  }, \"Saved Cards\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 29\n    }\n  }, paymentMethods.map(paymentMethod => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onChange: e => setSelectedCard(paymentMethod),\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 67\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 62\n      }\n    }, paymentMethod.card.brand, \" - \", paymentMethod.card.last4)));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setNewCardForm(true),\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 56\n    }\n  }, \"Add a new card\")))) : null) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 25\n    }\n  }, \"Quick checkout\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, \"Enter your email address to log in or sign up.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Email address\",\n    type: \"text\",\n    className: \"mt-2 mb-2 form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEmailSet,\n    className: \"mt-2 mb-2 btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 29\n    }\n  }, \"Continue with TapPay\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-nowrap card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, \"Order Details\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 37\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 37\n      }\n    }, item.price)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 33\n    }\n  }, \"Subtotal\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 33\n    }\n  }, subtotal))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 33\n    }\n  }, shipping))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 33\n    }\n  }, \"Taxes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 33\n    }\n  }, taxes))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 33\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 33\n    }\n  }, total)))), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: paymentIntent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: succeeded ? \"p-4 row justified-content-center result-message hidden\" : \"p-4 row justified-content-center result-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: processing || disabled || succeeded,\n    className: \"col btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 160\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 25\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 29\n    }\n  }) : \"Pay Now\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-error\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 25\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: succeeded ? \"p-4 justify-content-center result-message\" : \"p-4 justify-content-center result-message hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 25\n    }\n  }, \"Payment succeeded! Redirecting to checkout summary\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: returnURL,\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 47\n    }\n  }, \"Back\")))));\n};\n\nexport default Tap;","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/Tap.jsx"],"names":["React","useEffect","useState","useParams","OrderFinder","EmailPoster","Cards","loadStripe","Elements","CardForm","PayButton","Tap","id","items","setItems","acctID","setAcctId","useLocalStorage","storeName","setStoreName","successURL","setSuccessURL","returnURL","setReturnURL","subtotal","setSubtotal","shipping","setShipping","taxes","setTaxes","total","setTotal","disabled","setDisabled","error","setError","processing","setProcessing","name","setName","addressOne","setAddressOne","addressTwo","setAddressTwo","city","setCity","state","setState","zip","setZip","email","setEmail","fullName","setFullName","emailEntered","setEmailEntered","newCardForm","setNewCardForm","promise","setPromise","cusID","setCusID","paymentMethods","setPaymentMethods","billing","setBilling","billingExists","setBillingExists","clientSecret","setClientSecret","selectedCard","setSelectedCard","fetchData","response","get","data","order","acctid","storename","returnurl","err","console","log","post","customer","JSON","stringify","cards","length","handleEmailSet","handleSetBilling","address","line1","line2","postal_code","editEmail","editBilling","cancelEditBilling","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","parse","setValue","value","valueToStore","Function","setItem","isNumeric","n","isNaN","parseInt","isFinite","handleForm","e","target","map","paymentMethod","card","brand","last4","price","paymentIntent","succeeded"],"mappings":"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","sourcesContent":["import React , {useEffect, useState} from 'react';\nimport { useParams} from \"react-router-dom\";\nimport OrderFinder from '../apis/OrderFinder';\nimport EmailPoster from '../apis/EmailPoster';\nimport Cards from '../apis/Cards';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CardForm from './CardForm';\nimport PayButton from './PayButton';\n\nconst Tap = () => {\n    const {id} = useParams();\n\n    //from server response\n    const [items, setItems] = useState([]);\n    const [acctID, setAcctId] = useLocalStorage(\"acctID\", \"\");\n    const [storeName, setStoreName] = useState(\"\");\n    const [successURL, setSuccessURL] = useState(\"\");\n    const [returnURL, setReturnURL] = useState(\"\");\n    const [subtotal, setSubtotal] = useState(0);\n    const [shipping, setShipping] = useState(0);\n    const [taxes, setTaxes] = useState(0);\n    const [total, setTotal] = useState(0);\n\n    //pay button\n    const [disabled, setDisabled] = useState(true);\n    const [error, setError] = useState(null);\n    const [processing, setProcessing] = useState('');\n    \n    //billing fields\n    \n    const [name, setName] = useState(\"\");\n    const [addressOne, setAddressOne] = useState(\"\");\n    const [addressTwo, setAddressTwo] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [zip, setZip] = useState(\"\");\n\n    //from customer\n    const [email, setEmail] = useLocalStorage(\"email\", \"\");\n    const [fullName, setFullName] = useLocalStorage(\"\");\n    const [emailEntered, setEmailEntered] = useLocalStorage('emailEntered', false);\n    const [newCardForm, setNewCardForm] = useLocalStorage();\n    \n\n    //from stripe\n    const [promise,setPromise] = useState(() => loadStripe(\"pk_test_51HX92ADV5bqQz6pNUHpNfJziKCFf5lOBPO6A30apaEDI0Yb0jvwOmQCcebkay4TIcs2JIsrNxQs9vN8NImlsaevO0030bqBsJQ\"));\n    const [cusID, setCusID] = useLocalStorage(\"\");\n    const [paymentMethods, setPaymentMethods] = useState([]);\n    const [billing, setBilling] = useLocalStorage({});\n    const [billingExists, setBillingExists] = useLocalStorage('billingExists', false);\n    const [clientSecret, setClientSecret] = useState();\n\n    \n    const [selectedCard, setSelectedCard] = useState();\n\n    useEffect( () => {\n        \n        const fetchData = async () => {\n        \n        \n        try {\n            const response = await OrderFinder.get(\"/\"+id);\n            setItems(response.data.data.items)\n            setAcctId(response.data.data.order[0].acctid);\n            setStoreName(response.data.data.order[0].storename);\n            setSubtotal(response.data.data.order[0].subtotal);\n            setShipping(response.data.data.order[0].shipping);\n            setTaxes(response.data.data.order[0].taxes);\n            setTotal(response.data.data.order[0].total);\n            setSuccessURL(response.data.data.order[0].successURL);\n            setReturnURL(response.data.data.order[0].returnurl);\n         } catch(err){\n           console.log(err)\n         }\n            //look up billing info \n            try{\n            const response = await EmailPoster.post(\"/check/\", {\n                email\n            })\n            \n            setCusID(response.data.data.customer.id)\n            \n            if(response.data.data.customer.name != null){\n                console.log(\"setting billing: \"+JSON.stringify(response.data.data))\n                setBilling(response.data.data);\n                setBillingExists(true)\n                //if billing, look up cards\n                try {\n                    const cards = await Cards.post(\"/\", {\n                        id: response.data.data.customer.id\n                    });\n                    console.log(\"cards: \"+JSON.stringify(cards.data.data.paymentMethods.data))\n                    if(cards.data.data.paymentMethods.data.length > 0){\n                        setNewCardForm(false)\n                        setPaymentMethods(cards.data.data.paymentMethods.data)\n                        \n                    }\n                    else{\n                        console.log(\"card form true \")\n                        setNewCardForm(true);\n                    }\n                       \n                 } catch(err){\n                   console.log(err)\n                 }\n                 \n                \n                \n            }\n            \n        } catch(err){\n            console.log(err)\n        }\n        \n       }\n       fetchData();\n\n    },[]);\n\n    \n\n    const handleEmailSet = async () => {\n        \n        try{\n            const response = await EmailPoster.post(\"/check/\", {\n                email\n            })\n           console.log(\"cusID: \"+response.data.data.customer.id) \n            setCusID(response.data.data.customer.id)\n            \n            if(response.data.data.customer.name != null){\n                setBilling(response.data.data);\n                setBillingExists(true)\n                //if billing, look up cards\n                try {\n                    const cards = await Cards.post(\"/\", {\n                        id: response.data.data.customer.id\n                    });\n                    \n                    if(cards.data.data.paymentMethods.data.length > 0){\n                        console.log(\"card form false\")\n                        setNewCardForm(false)\n                        setPaymentMethods(cards.data.data.paymentMethods.data)\n                        \n                    }\n                    else{\n                        console.log(\"card form true \")\n                        setNewCardForm(true);\n                    }\n                       \n                 } catch(err){\n                   console.log(err)\n                 }\n                 \n                \n                \n            }\n            \n        } catch(err){\n            console.log(err)\n        }\n        setEmail(email)\n        setEmailEntered(true)\n        \n    };\n\n    const handleSetBilling = async () => {\n        console.log(name)\n        try{\n            const response = await EmailPoster.post(\"/billing/\", {\n                    id: cusID,\n                    name,\n                    address : {\n                        line1 : addressOne,\n                        line2 : addressTwo,\n                        city,\n                        state,\n                        postal_code : zip\n                    },\n                \n            })\n            \n            setBilling(response.data.data)\n            setBillingExists(true)\n            try {\n                const cards = await Cards.post(\"/\", {\n                    id: response.data.data.customer.id\n                });\n                \n                if(cards.data.data.paymentMethods.data!= null){\n                    setPaymentMethods(cards.data.data.paymentMethods.data)\n                }\n                else{\n                    setNewCardForm(true);\n                }\n                   \n             } catch(err){\n               console.log(err)\n             }\n        } catch(err){\n\n        }\n        //load saved cards\n        \n        \n    };\n\n    const editEmail = async () => {\n        \n        setCusID(\"\")\n        setEmailEntered(false)\n        setEmail(\"\")\n        setBilling([])\n        setBillingExists(false);\n        setPaymentMethods([])\n    };\n\n    const editBilling = async () => {\n        setBillingExists(false);\n    };\n\n    const cancelEditBilling = async () => {\n        setBillingExists(true);\n    };\n\n\n    \n\n    // Hook\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n  \n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n    return [storedValue, setValue];\n  }\n\n  function isNumeric(n) {\n    return !isNaN(parseInt(n)) && isFinite(n);\n}\n\nconst handleForm = async () => {\n    \n    \n};\n\n    return (\n        <>\n         \n        <div className=\"text-center\">\n            <h1>\"storeName\"</h1>\n            \n        </div>\n             \n        \n        <div className=\"row \">\n            <div className=\"col-sm-12\">\n              \n\n            {emailEntered ? \n            <>\n            <div className=\"card mt-4 mb-4 \">\n                <div className=\"card-body\">\n                    \n                    <div className=\"row mt-4\">\n                        <div className=\"col-sm-4\">Email</div>\n                        <div className=\"col-sm-4\"><span>{email}</span></div>\n                        <div className=\"col-sm-2 text-right\"><button className=\"btn btn-link p-0 m-0 d-inline align-baseline\"onClick={editEmail}>edit</button></div>\n                    </div> \n\n                   \n                        {billingExists ? \n                        \n                        <div className=\"row mt-4\">\n                            <div className=\"col-sm-4\">Billing Address</div>\n                            <div className=\"col-sm-4\"> \n\n                                <div className=\"row\"><span>{billing.customer.name}</span></div>\n                                <div className=\"row\"><span>{billing.customer.address.line1}</span></div>\n                                <div className=\"row\"><span>{billing.customer.address.line2}</span></div>\n                                <div className=\"row\"><span>{billing.customer.address.city}</span></div>\n                                <div className=\"row\"><span>{billing.customer.address.state}</span></div>\n                                <div className=\"row\"><span>{billing.customer.address.zip}</span></div>\n                            </div>\n                            <div className=\"col-sm-2 text-right\"><button onClick={editBilling} className=\"btn btn-link p-0 m-0 d-inline align-baseline\" >edit</button></div>\n                            \n                        </div>\n                        \n                        :\n                        \n                         <div className=\"row mt-4\">\n                             \n                                <div className=\"col-sm-4\">Enter Billing Address</div>\n                                <div className=\"col-sm-4\">\n                                    <div className=\"row mt-2\">\n                                        <input \n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)} \n                                    placeholder=\"Full Name\">\n                                        </input></div>\n                                    <div className=\"row mt-2\"><input \n                                    value={addressOne}\n                                    onChange={(e) => setAddressOne(e.target.value)} \n                                    placeholder=\"Address Line 1\"></input></div>\n                                    <div className=\"row mt-2\"><input \n                                    value={addressTwo}\n                                    onChange={(e) => setAddressOne(e.target.value)} \n                                    placeholder=\"Address Line 2\"></input></div> \n                                    <div className=\"row mt-2\"><input\n                                    value={state}\n                                    onChange={(e) => setState(e.target.value)} \n                                    placeholder=\"City\"></input></div> \n                                    <div className=\"row mt-2\"><input \n                                    value={city}\n                                    onChange={(e) => setCity(e.target.value)} \n                                    placeholder=\"State\"></input></div> \n                                    <div className=\"row mt-2\"><input \n                                    value={zip}\n                                    onChange={(e) => setZip(e.target.value)} \n                                    placeholder=\"Zip\"></input></div> \n                                    <div className=\"row mt-2\"><button onClick={handleSetBilling} className=\"btn btn-primary  btn-block \">Save Address</button></div>\n                                \n                                </div>\n                                <div>\n                                    {billing ? null : (billing.customer.name!=false  ?   <div className=\"col-sm-2 text-right\"><button onClick={cancelEditBilling} className=\"btn btn-link p-0 m-0 d-inline align-baseline\" >cancel</button></div>\n                                : null) }\n                                </div>\n                                \n                            \n                         </div>\n                        }\n\n                        \n                    \n                        \n                    </div> \n                </div>    \n\n                    {newCardForm && billingExists ? \n                    <div className=\"card mt-4 mb-4 \">\n                        <div className=\"card-header text-center \">\n                            <h4  className=\"text-center\">Save a New Card</h4>\n                            <p>so you don't have to enter it next time!</p>\n                        </div>\n                        <div className=\"card-body\">\n                        <Elements  stripe={promise}>\n                            <CardForm setClientSecret={setClientSecret}/>\n                        </Elements>\n                        {paymentMethods.length > 0 ? <div className=\"col-sm-2\"><button onClick={() => setNewCardForm(false)} className=\"btn btn-link d-inline align-baseline\" >Back to Saved Cards</button></div> : null}\n                        </div>\n                    </div>\n                    \n                    : (billingExists && !newCardForm ? \n                \n                    <div className=\"card text-center mt-4 mb-4 \">\n                            <div className=\"card-header\">\n                                <h4  className=\"text-center\">Saved Cards</h4>\n                            </div>\n                            <div className=\"card-body \">\n                            {paymentMethods.map(paymentMethod=>{\n                                return(\n                                    <div onChange={(e) => setSelectedCard(paymentMethod)} className=\"row \">\n                                        <div className=\"col-xs-3\"><input \n                                        type=\"radio\" \n                                        name=\"addon\" \n                                        /></div>\n                                        <div className=\"col\"><span>{paymentMethod.card.brand} - {paymentMethod.card.last4}</span></div>\n                                    </div>\n                                )\n                            })}\n                             <div className=\"row mt-2\"><button onClick={() => setNewCardForm(true)}className=\"btn btn-primary\">Add a new card</button></div>\n                            </div>\n                        </div> : null)}\n                    \n                    \n                        \n                        \n                        \n                        \n            \n            </>\n               :\n              \n              <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Quick checkout</h5>\n                        <p>Enter your email address to log in or sign up.</p>\n                        <div className=\"\">\n                            \n                            <input \n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email address\"\n                            type=\"text\" \n                            className=\"mt-2 mb-2 form-control\" \n                            />\n                            <button onClick={handleEmailSet} className=\"mt-2 mb-2 btn btn-primary btn-block\">Continue with TapPay</button>   \n                        </div>\n                    </div>\n                   \n                </div> \n                }\n                \n        \n                <div className=\"mt-4 text-nowrap card\">\n                    <div className=\"card-header\">\n                        <h4  className=\"text-center\">Order Details</h4>\n                    </div>\n                                <ul className=\"list-group list-group-flush\">\n                    {items.map(item=>{\n                 return(  \n                                <li className=\"list-group-item\">\n                                    <div className=\"row\">\n                                    <div className=\"col\">{item.name}</div> \n                                    <div className=\"col text-right\">{item.price}</div>\n                                    </div>\n                                </li>\n                    )\n             })}\n                     </ul>\n                     <div className=\"card-body\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Subtotal</div> \n                                <div className=\"col text-right\">{subtotal}</div>\n                                </div>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Shipping</div> \n                                <div className=\"col text-right\">{shipping}</div>\n                                </div>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Taxes</div> \n                                <div className=\"col text-right\">{taxes}</div>\n                                </div>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Total</div> \n                                <div className=\"col text-right\">{total}</div>\n                                </div>\n                            </li>\n                        </ul>\n                        <form id=\"payment-form\" onSubmit={paymentIntent}>\n                    <div className={succeeded ? \"p-4 row justified-content-center result-message hidden\" : \"p-4 row justified-content-center result-message\" }><button\n                        disabled={processing || disabled || succeeded}\n                        className=\"col btn btn-primary\"\n                    >\n                        <span id=\"button-text\">\n                        {processing ? (\n                            <div className=\"spinner\" id=\"spinner\"></div>\n                        ) : (\n                            \"Pay Now\"\n                        )} \n                        </span>\n                    </button></div>\n                    {/* Show any error that happens when processing the payment */}\n                    {error && (\n                        <div className=\"card-error\" role=\"alert\">\n                        {error}\n                        </div>\n                    )}\n                    <div className={succeeded ? \"p-4 justify-content-center result-message\" : \"p-4 justify-content-center result-message hidden\"}>\n                        <div class=\"row\">\n                        </div>\n                        <div class=\"row\">\n                        <p>\n                        Payment succeeded! Redirecting to checkout summary\n                        </p>\n                        </div>\n                    </div>\n                    </form>\n                    </div>\n                \n            </div>\n\n            <div className=\"mt-4 text-center\"><a href={returnURL} className=\"btn btn-link p-0 m-0 d-inline align-baseline\">Back</a></div>\n            </div>\n         \n          </div>\n            \n        </>\n    )\n}\n\nexport default Tap;\n"]},"metadata":{},"sourceType":"module"}