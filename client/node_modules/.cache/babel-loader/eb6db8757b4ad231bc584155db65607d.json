{"ast":null,"code":"import _toConsumableArray from\"/Users/adamoreilly/Desktop/SP2020/TapServer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/adamoreilly/Desktop/SP2020/TapServer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,createContext}from\"react\";export var JobsContext=createContext();export var JobsContextProvider=function JobsContextProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobs=_useState2[0],setJobs=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedJob=_useState4[0],setSelectedJob=_useState4[1];var addJobs=function addJobs(job){setJobs([].concat(_toConsumableArray(jobs),[jobs]));};return/*#__PURE__*/React.createElement(JobsContext.Provider,{value:{jobs:jobs,setJobs:setJobs,addJobs:addJobs,selectedJob:selectedJob,setSelectedJob:setSelectedJob}},props.children);};","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/TapServer/client/src/context/JobContext.js"],"names":["React","useState","createContext","JobsContext","JobsContextProvider","props","jobs","setJobs","selectedJob","setSelectedJob","addJobs","job","children"],"mappings":"0VAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,aAAzB,KAA6C,OAA7C,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGD,aAAa,EAAjC,CAEP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,KAAK,CAAI,eAChBJ,QAAQ,CAAC,EAAD,CADQ,wCACjCK,IADiC,eAC3BC,OAD2B,8BAEFN,QAAQ,CAAC,IAAD,CAFN,yCAEjCO,WAFiC,eAEpBC,cAFoB,eAIxC,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,CAAS,CACrBJ,OAAO,8BAAKD,IAAL,GAAWA,IAAX,GAAP,CACH,CAFD,CAGA,mBACI,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACA,IAAI,CAAJA,IAAD,CAAOC,OAAO,CAAPA,OAAP,CAAgBG,OAAO,CAAPA,OAAhB,CAAyBF,WAAW,CAAXA,WAAzB,CAAsCC,cAAc,CAAdA,cAAtC,CAA7B,EACKJ,KAAK,CAACO,QADX,CADJ,CAKH,CAZM","sourcesContent":["import React, {useState, createContext} from \"react\";\n\nexport const JobsContext = createContext();\n\nexport const JobsContextProvider = props => {\n    const [jobs, setJobs] = useState([])\n    const [selectedJob, setSelectedJob] = useState(null)\n\n    const addJobs = (job) => {\n        setJobs([...jobs, jobs])\n    }\n    return (\n        <JobsContext.Provider value={{jobs, setJobs, addJobs, selectedJob, setSelectedJob}}>\n            {props.children}\n        </JobsContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}