{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adamoreilly/Desktop/SP2020/TapServer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adamoreilly/Desktop/SP2020/TapServer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adamoreilly/Desktop/SP2020/TapServer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useHistory}from\"react-router-dom\";import\"./App.css\";import{CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";var CardForm=function CardForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),clientSecret=_useState2[0],setClientSecret=_useState2[1];var stripe=useStripe();var elements=useElements();var history=useHistory();useEffect(function(){window.scrollTo(0,0);// Create PaymentIntent as soon as the page loads\n},[]);var cardStyle={style:{base:{color:\"#32325d\",fontFamily:'Arial, sans-serif',fontSmoothing:\"antialiased\",fontSize:\"16px\",\"::placeholder\":{color:\"#32325d\"}},invalid:{color:\"#fa755a\",iconColor:\"#fa755a\"}}};var handleChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Listen for changes in the CardElement\n// and display any errors as the customer types their card details\nprops.setDisabled(event.empty);props.setError(event.error?event.error.message:\"\");case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleChange(_x){return _ref.apply(this,arguments);};}();var goHome=function goHome(){history.push(\"/\");};var handleForm=function handleForm(){props.form();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CardElement,{id:\"card-element\",options:cardStyle,onChange:handleChange}));};export default CardForm;","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/TapServer/client/src/components/CardForm.jsx"],"names":["React","useState","useEffect","useHistory","CardElement","useStripe","useElements","CardForm","props","clientSecret","setClientSecret","stripe","elements","history","window","scrollTo","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","setDisabled","empty","setError","error","message","goHome","push","handleForm","form"],"mappings":"wfAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,WAAP,CACA,OACEC,WADF,CAEEC,SAFF,CAGEC,WAHF,KAIO,yBAJP,CAMA,GAAMC,CAAAA,QAAQ,CAAE,QAAVA,CAAAA,QAAU,CAACC,KAAD,CAAW,eACeP,QAAQ,CAAC,EAAD,CADvB,wCAClBQ,YADkB,eACJC,eADI,eAEzB,GAAMC,CAAAA,MAAM,CAAGN,SAAS,EAAxB,CACA,GAAMO,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAIO,CAAAA,OAAO,CAAGV,UAAU,EAAxB,CAEAD,SAAS,CAAC,UAAM,CACdY,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACA;AACD,CAHQ,CAGN,EAHM,CAAT,CAOA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,CACLC,IAAI,CAAE,CACJC,KAAK,CAAE,SADH,CAEJC,UAAU,CAAE,mBAFR,CAGJC,aAAa,CAAE,aAHX,CAIJC,QAAQ,CAAE,MAJN,CAKJ,gBAAiB,CACfH,KAAK,CAAE,SADQ,CALb,CADD,CAULI,OAAO,CAAE,CACPJ,KAAK,CAAE,SADA,CAEPK,SAAS,CAAE,SAFJ,CAVJ,CADS,CAAlB,CAiBA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,KAAP,kHAEnB;AACA;AACAlB,KAAK,CAACmB,WAAN,CAAkBD,KAAK,CAACE,KAAxB,EACApB,KAAK,CAACqB,QAAN,CAAeH,KAAK,CAACI,KAAN,CAAcJ,KAAK,CAACI,KAAN,CAAYC,OAA1B,CAAoC,EAAnD,EALmB,sDAAH,kBAAZN,CAAAA,YAAY,4CAAlB,CAYA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBnB,OAAO,CAACoB,IAAR,CAAa,GAAb,EACD,CAFD,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB1B,KAAK,CAAC2B,IAAN,GACD,CAFD,CAGA,mBACA,qDACI,oBAAC,WAAD,EAAa,EAAE,CAAC,cAAhB,CAA+B,OAAO,CAAEnB,SAAxC,CAAmD,QAAQ,CAAES,YAA7D,EADJ,CADA,CAKD,CArDD,CAuDA,cAAelB,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport \"./App.css\";\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\n\nconst CardForm= (props) => {\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  let history = useHistory(); \n  \n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // Create PaymentIntent as soon as the page loads\n  }, []);\n\n\n  \n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  const handleChange = async (event) => {\n\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    props.setDisabled(event.empty);\n    props.setError(event.error ? event.error.message : \"\");\n  };\n\n\n\n  \n\n  const goHome = () => {\n    history.push(\"/\");\n  }\n  const handleForm = () => {\n    props.form();\n  }\n  return (\n  <>\n      <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\n    </>\n  );\n}\n\nexport default CardForm"]},"metadata":{},"sourceType":"module"}