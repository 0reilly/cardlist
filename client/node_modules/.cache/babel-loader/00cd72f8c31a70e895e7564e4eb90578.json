{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adamoreilly/Desktop/SP2020/TapServer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adamoreilly/Desktop/SP2020/TapServer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{Component,useEffect,useState}from'react';import NewOrder from'../apis/NewOrder';import Onboard from'../apis/Onboard';import{useHistory}from\"react-router-dom\";var Home=function Home(){var history=useHistory();var sampleOrder=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"send request to server and redirect automatically\");_context.prev=1;_context.next=4;return NewOrder.post(\"/\",{items:[{name:\"Coffee\",price:500}],subtotal:500,shipping:0,taxes:0,total:500,storename:\"Donate a coffee to the developer\",acctID:\"acct_1IkFrCKZrLHZ09xO\",returnURL:\"https://www.cardlist.co\",successURL:\"https://www.cardlist.co\"});case 4:response=_context.sent;console.log(response);window.location.replace(response.data.data.redirect);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function sampleOrder(){return _ref.apply(this,arguments);};}();var setupPayouts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"stripe onboarding\");_context2.next=3;return Onboard.post(\"/\",{});case 3:response=_context2.sent;if(response.data.url){window.location=response.data.url;}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function setupPayouts(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"h2\",null,\"CardList\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Increase conversion rates and checkout time by letting customers save their card data in Stripe.\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Integrating with CardList is seamless! Simply send a request to our server with your customer's order details, redirect them to our checkout page, and we'll let them checkout with a new card or a payment method they've stored during previous purchases. \"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Click the button below to generate a sample order and browse the app's functionality. Feel free to actually buy me a coffee :) \"),/*#__PURE__*/React.createElement(\"button\",{onClick:sampleOrder,className:\"btn btn-primary  btn-small\"},\"Donate a coffee\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Integration Steps\"),/*#__PURE__*/React.createElement(\"h5\",null,\"We use Stripe to enable your customers to save payment information securely.\"),/*#__PURE__*/React.createElement(\"h6\",null,\"Just complete a simple Stripe Connect onbaording flow and you'll be ready to use CardList!\"),/*#__PURE__*/React.createElement(\"button\",{onClick:setupPayouts,className:\"btn btn-primary  btn-small\"},\"Setup Payouts on Stripe\"),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pb-4\"},/*#__PURE__*/React.createElement(\"p\",null,\"Once you have your Stripe Connected AcctID, click below to open the Postman request for creating new CardList orders\"),/*#__PURE__*/React.createElement(\"a\",{href:\"https://app.getpostman.com/run-collection/e84dc45f266ef6e49341\",className:\"btn btn-link p-0 m-0 d-inline align-baseline\"},\"Postman Collection\")),/*#__PURE__*/React.createElement(\"div\",null));};export default Home;","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/TapServer/client/src/components/Home.jsx"],"names":["React","Component","useEffect","useState","NewOrder","Onboard","useHistory","Home","history","sampleOrder","console","log","post","items","name","price","subtotal","shipping","taxes","total","storename","acctID","returnURL","successURL","response","window","location","replace","data","redirect","setupPayouts","url"],"mappings":"+UAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,SAA3B,CAAsCC,QAAtC,KAAqD,OAArD,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACf,GAAIC,CAAAA,OAAO,CAAGF,UAAU,EAAxB,CAEA,GAAMG,CAAAA,WAAW,0FAAG,gJAChBC,OAAO,CAACC,GAAR,CAAY,mDAAZ,EADgB,sCAGOP,CAAAA,QAAQ,CAACQ,IAAT,CAAc,GAAd,CAAmB,CAClCC,KAAK,CAAG,CAEJ,CACIC,IAAI,CAAE,QADV,CAEIC,KAAK,CAAG,GAFZ,CAFI,CAD0B,CAQlCC,QAAQ,CAAE,GARwB,CASlCC,QAAQ,CAAE,CATwB,CAUlCC,KAAK,CAAE,CAV2B,CAWlCC,KAAK,CAAE,GAX2B,CAYlCC,SAAS,CAAE,kCAZuB,CAalCC,MAAM,CAAE,uBAb0B,CAclCC,SAAS,CAAG,yBAdsB,CAelCC,UAAU,CAAG,yBAfqB,CAAnB,CAHP,QAGVC,QAHU,eAoBhBd,OAAO,CAACC,GAAR,CAAYa,QAAZ,EACAC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBH,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBC,QAA3C,EArBgB,+EAwBhBnB,OAAO,CAACC,GAAR,cAxBgB,oEAAH,kBAAXF,CAAAA,WAAW,0CAAjB,CA8BA,GAAMqB,CAAAA,YAAY,2FAAG,qJACjBpB,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADiB,uBAEMN,CAAAA,OAAO,CAACO,IAAR,CAAa,GAAb,CAAkB,EAAlB,CAFN,QAEXY,QAFW,gBAGjB,GAAIA,QAAQ,CAACI,IAAT,CAAcG,GAAlB,CAAuB,CACnBN,MAAM,CAACC,QAAP,CAAkBF,QAAQ,CAACI,IAAT,CAAcG,GAAhC,CACD,CALc,wDAAH,kBAAZD,CAAAA,YAAY,2CAAlB,CAOA,mBACI,qDACI,2BAAK,SAAS,CAAC,aAAf,eACI,yCADJ,cAEI,iIAFJ,cAGI,8BAHJ,cAKI,6RALJ,cAMI,8BANJ,cAQI,+JARJ,cASI,8BAAS,OAAO,CAAErB,WAAlB,CAA+B,SAAS,CAAC,4BAAzC,oBATJ,cAUI,8BAVJ,cAWI,8BAXJ,CADJ,cAgBQ,2BAAK,SAAS,CAAC,aAAf,eACA,kDADA,cAGA,6GAHA,cAKI,2HALJ,cAMI,8BAAS,OAAO,CAAEqB,YAAlB,CAAgC,SAAS,CAAC,4BAA1C,4BANJ,cAOI,8BAPJ,CAhBR,cAyBQ,2BAAK,SAAS,CAAC,kBAAf,eACI,oJADJ,cAEI,yBAAG,IAAI,CAAE,gEAAT,CAA2E,SAAS,CAAC,8CAArF,uBAFJ,CAzBR,cAgCI,+BAhCJ,CADJ,CAuCH,CA/ED,CAiFA,cAAevB,CAAAA,IAAf","sourcesContent":["import React , {Component, useEffect, useState} from 'react';\nimport NewOrder from '../apis/NewOrder';\nimport Onboard from '../apis/Onboard';\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = () => {\n    let history = useHistory();\n\n    const sampleOrder = async() =>{\n        console.log(\"send request to server and redirect automatically\");\n        try {\n        const response = await NewOrder.post(\"/\", {\n                items : [\n                    \n                    {\n                        name: \"Coffee\",\n                        price : 500\n                    }\n                    ],\n                subtotal: 500,\n                shipping: 0,\n                taxes: 0,\n                total: 500,\n                storename: \"Donate a coffee to the developer\",\n                acctID: \"acct_1IkFrCKZrLHZ09xO\",\n                returnURL : \"https://www.cardlist.co\",\n                successURL : \"https://www.cardlist.co\"\n        });\n        console.log(response)\n        window.location.replace(response.data.data.redirect);\n    }\n    catch(err){\n        console.log(err);\n    }\n\n\n    }\n\n    const setupPayouts = async()=>{\n        console.log(\"stripe onboarding\");\n        const response = await Onboard.post(\"/\", {});\n        if (response.data.url) {\n            window.location = response.data.url;\n          }\n    }\n    return (\n        <>\n            <div className=\"text-center\">\n                <h2>CardList</h2>\n                <h5>Increase conversion rates and checkout time by letting customers save their card data in Stripe.</h5>\n                <br></br>\n                \n                <p>Integrating with CardList is seamless! Simply send a request to our server with your customer's order details, redirect them to our checkout page, and we'll let them checkout with a new card or a payment method they've stored during previous purchases. </p>\n                <br></br>\n                \n                <p>Click the button below to generate a sample order and browse the app's functionality. Feel free to actually buy me a coffee :) </p>\n                <button  onClick={sampleOrder} className=\"btn btn-primary  btn-small\">Donate a coffee</button>\n                <br></br>\n                <br></br>\n                \n                </div>\n\n                <div className=\"text-center\">\n                <h4>Integration Steps</h4>\n\n                <h5>We use Stripe to enable your customers to save payment information securely. \n                    </h5>\n                    <h6>Just complete a simple Stripe Connect onbaording flow and you'll be ready to use CardList!</h6>\n                    <button  onClick={setupPayouts} className=\"btn btn-primary  btn-small\">Setup Payouts on Stripe</button>\n                    <br></br>\n                </div>\n                <div className=\"text-center pb-4\">\n                    <p>Once you have your Stripe Connected AcctID, click below to open the Postman request for creating new CardList orders</p>\n                    <a href={\"https://app.getpostman.com/run-collection/e84dc45f266ef6e49341\"} className=\"btn btn-link p-0 m-0 d-inline align-baseline\">Postman Collection</a>\n                \n                </div>\n            \n\n            <div>\n            </div>\n        </>\n            \n        \n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}