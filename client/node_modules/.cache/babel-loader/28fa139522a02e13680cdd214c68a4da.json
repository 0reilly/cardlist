{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/Desktop/SP2020/TapServer/client/src/components/Home.jsx\";\nimport React, { Component, useEffect, useState } from 'react';\nimport NewOrder from '../apis/NewOrder';\nimport Onboard from '../apis/Onboard';\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = () => {\n  let history = useHistory();\n\n  const sampleOrder = async () => {\n    console.log(\"send request to server and redirect automatically\");\n\n    try {\n      const response = await NewOrder.post(\"/\", {\n        items: [{\n          name: \"Coffee\",\n          price: 500\n        }],\n        subtotal: 500,\n        shipping: 0,\n        taxes: 0,\n        total: 500,\n        storename: \"Donate a coffee to the developer\",\n        acctID: \"acct_1IkFrCKZrLHZ09xO\",\n        returnURL: \"https://www.cardlist.co\",\n        successURL: \"https://www.cardlist.co\"\n      });\n      console.log(response);\n      window.location.replace(response.data.data.redirect);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const setupPayouts = async () => {\n    console.log(\"stripe onboarding\");\n    const response = await Onboard.post(\"/\", {});\n\n    if (response.data.url) {\n      window.location = response.data.url;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"CardList \\uD83D\\uDCB3\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Increase conversion rates and checkout time by letting customers save their card data in Stripe.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"No extra fee on top of Stripe fees \\uD83C\\uDF89(FREE)\\uD83C\\uDF89\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Feel free to actually buy me a coffee :) \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sampleOrder,\n    className: \"btn btn-primary  btn-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Donate a coffee\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Integration Steps\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Switching with CardList is seamless! Simply send a request to our server with your customer's order details, redirect them to our checkout page, and we'll let them checkout with a new card or a payment method they've stored during previous purchases on our platform. \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"We use Stripe to enable your customers to save payment information securely.\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Just complete a simple Stripe Connect onbaording flow and you'll be ready to use CardList!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setupPayouts,\n    className: \"btn btn-primary  btn-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Setup Payouts on Stripe\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Once you have your Stripe Connected AcctID, click below to open the Postman request for creating new CardList orders\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://app.getpostman.com/run-collection/e84dc45f266ef6e49341\",\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Postman Collection\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/TapServer/client/src/components/Home.jsx"],"names":["React","Component","useEffect","useState","NewOrder","Onboard","useHistory","Home","history","sampleOrder","console","log","response","post","items","name","price","subtotal","shipping","taxes","total","storename","acctID","returnURL","successURL","window","location","replace","data","redirect","err","setupPayouts","url"],"mappings":"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","sourcesContent":["import React , {Component, useEffect, useState} from 'react';\nimport NewOrder from '../apis/NewOrder';\nimport Onboard from '../apis/Onboard';\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = () => {\n    let history = useHistory();\n\n    const sampleOrder = async() =>{\n        console.log(\"send request to server and redirect automatically\");\n        try {\n        const response = await NewOrder.post(\"/\", {\n                items : [\n                    \n                    {\n                        name: \"Coffee\",\n                        price : 500\n                    }\n                    ],\n                subtotal: 500,\n                shipping: 0,\n                taxes: 0,\n                total: 500,\n                storename: \"Donate a coffee to the developer\",\n                acctID: \"acct_1IkFrCKZrLHZ09xO\",\n                returnURL : \"https://www.cardlist.co\",\n                successURL : \"https://www.cardlist.co\"\n        });\n        console.log(response)\n        window.location.replace(response.data.data.redirect);\n    }\n    catch(err){\n        console.log(err);\n    }\n\n\n    }\n\n    const setupPayouts = async()=>{\n        console.log(\"stripe onboarding\");\n        const response = await Onboard.post(\"/\", {});\n        if (response.data.url) {\n            window.location = response.data.url;\n          }\n    }\n    return (\n        <>\n            <div className=\"text-center\">\n                <h2>CardList 💳</h2>\n                <h5>Increase conversion rates and checkout time by letting customers save their card data in Stripe.</h5>\n                <p>No extra fee on top of Stripe fees 🎉(FREE)🎉</p>\n                \n                <br></br>\n                 \n                <p>Feel free to actually buy me a coffee :) </p>\n                <button  onClick={sampleOrder} className=\"btn btn-primary  btn-small\">Donate a coffee</button>\n                <br></br>\n                <br></br>\n                \n                </div>\n\n                <div className=\"text-center\">\n                <h4>Integration Steps</h4>\n\n                <p>Switching with CardList is seamless! Simply send a request to our server with your customer's order details, redirect them to our checkout page, and we'll let them checkout with a new card or a payment method they've stored during previous purchases on our platform. </p>\n                <br></br>\n               \n\n                <h6>We use Stripe to enable your customers to save payment information securely. \n                    </h6>\n                    <h6>Just complete a simple Stripe Connect onbaording flow and you'll be ready to use CardList!</h6>\n                    <button  onClick={setupPayouts} className=\"btn btn-primary  btn-small\">Setup Payouts on Stripe</button>\n                    <br></br>\n                </div>\n                <div className=\"text-center pb-4\">\n                    <p>Once you have your Stripe Connected AcctID, click below to open the Postman request for creating new CardList orders</p>\n                    <a href={\"https://app.getpostman.com/run-collection/e84dc45f266ef6e49341\"} className=\"btn btn-link p-0 m-0 d-inline align-baseline\">Postman Collection</a>\n                \n                </div>\n            \n\n            <div>\n            </div>\n        </>\n            \n        \n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}