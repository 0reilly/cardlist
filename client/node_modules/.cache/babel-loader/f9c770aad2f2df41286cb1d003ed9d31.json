{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/Tap.jsx\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport OrderFinder from '../apis/OrderFinder';\nimport EmailPoster from '../apis/EmailPoster';\nimport Cards from '../apis/Cards';\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CardForm from './CardForm';\nimport PaymentIntent from '../apis/PaymentIntent';\nimport 'react-phone-number-input/style.css';\nimport PhoneInput from 'react-phone-number-input';\nimport StartVerify from '../apis/StartVerify';\nimport CheckCode from '../apis/CheckCode';\nimport OTP from \"./OTP\";\n\nconst Tap = () => {\n  const [otp, setOtp] = useState(new Array(6).fill());\n  const [phoneRequested, setPhoneRequested] = useState(false);\n  const {\n    id\n  } = useParams(); //from server response\n\n  const [items, setItems] = useState([]);\n  const [acctID, setAcctId] = useLocalStorage(\"acctID\", \"\");\n  const [storeName, setStoreName] = useState(\"\");\n  const [successURL, setSuccessURL] = useState(\"\");\n  const [returnURL, setReturnURL] = useState(\"\");\n  const [subtotal, setSubtotal] = useState(0);\n  const [shipping, setShipping] = useState(0);\n  const [taxes, setTaxes] = useState(0);\n  const [total, setTotal] = useState(0); //billing fields\n\n  const [name, setName] = useState(\"\");\n  const [addressOne, setAddressOne] = useState(\"\");\n  const [addressTwo, setAddressTwo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\"); //from customer\n\n  const [phone, setPhone] = useState(\"\");\n  const [phoneEntered, setPhoneEntered] = useState(false);\n  const [fullName, setFullName] = useLocalStorage(\"\");\n  const [email, setEmail] = useLocalStorage(\"email\", \"\");\n  const [emailEntered, setEmailEntered] = useLocalStorage('emailEntered', false);\n  const [newCardForm, setNewCardForm] = useLocalStorage();\n  const [phoneVerified, setPhoneVerified] = useLocalStorage('phoneVerified', false); //from stripe\n\n  const [cusID, setCusID] = useLocalStorage(\"\");\n  const [paymentMethods, setPaymentMethods] = useState([]);\n  const [billing, setBilling] = useLocalStorage({});\n  const [billingExists, setBillingExists] = useLocalStorage('billingExists', false);\n  const [disabled, setDisabled] = useState(true);\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [clientSecret, setClientSecret] = useState();\n  const [selectedCard, setSelectedCard] = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [code, setCode] = useState(\"\");\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await OrderFinder.get(\"/\" + id);\n        setItems(response.data.data.items);\n        setAcctId(response.data.data.order[0].acctid);\n        setStoreName(response.data.data.order[0].storename);\n        setSubtotal(response.data.data.order[0].subtotal);\n        setShipping(response.data.data.order[0].shipping);\n        setTaxes(response.data.data.order[0].taxes);\n        setTotal(response.data.data.order[0].total);\n        setSuccessURL(response.data.data.order[0].successURL);\n        setReturnURL(response.data.data.order[0].returnurl);\n      } catch (err) {\n        console.log(err);\n      } //look up billing info \n\n\n      try {\n        const response = await EmailPoster.post(\"/check/\", {\n          phone,\n          email\n        });\n        setCusID(response.data.data.customer.id);\n\n        if (response.data.data.customer.name != null) {\n          //console.log(\"setting billing: \"+JSON.stringify(response.data.data))\n          setBilling(response.data.data);\n          setBillingExists(true); //if billing, look up cards\n\n          try {\n            const cards = await Cards.post(\"/\", {\n              id: response.data.data.customer.id\n            }); //console.log(\"cards: \"+JSON.stringify(cards.data.data.paymentMethods.data))\n\n            if (cards.data.data.paymentMethods.data.length > 0) {\n              setNewCardForm(false);\n              setPaymentMethods(cards.data.data.paymentMethods.data);\n            } else {\n              console.log(\"card form true \");\n              setNewCardForm(true);\n            }\n          } catch (err) {\n            console.log(err);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const paymentIntent = async e => {\n    e.preventDefault();\n    console.log(\"creating payment intent\");\n\n    try {\n      const pi = await PaymentIntent.post(\"/\", {\n        amount: total,\n        customer: cusID,\n        account: acctID\n      });\n      console.log(\"payment intent created\" + JSON.stringify(pi));\n      handleSubmit(pi.data.clientSecret);\n    } catch (err) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async clientSecret => {\n    console.log(\"confirming payment\");\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: newCardForm ? {\n        card: elements.getElement(CardElement)\n      } : selectedCard.id\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n\n  const handleEmailSet = async () => {\n    if (email != \"\") {\n      setEmail(email);\n      setEmailEntered(true);\n    }\n  };\n\n  const handlePhoneSet = async () => {\n    setPhone(phone);\n    setPhoneVerified(true); //call handleEmailPhoneSet\n    //handleEmailPhoneSet();\n  };\n\n  const handleEmailPhoneSet = async () => {\n    try {\n      const response = await EmailPoster.post(\"/check/\", {\n        email,\n        phone\n      });\n      console.log(\"cusID: \" + response.data.data.customer.id);\n      setCusID(response.data.data.customer.id);\n\n      if (response.data.data.customer.name != null) {\n        setBilling(response.data.data);\n        setBillingExists(true); //if billing, look up cards\n\n        try {\n          const cards = await Cards.post(\"/\", {\n            id: response.data.data.customer.id\n          });\n\n          if (cards.data.data.paymentMethods.data.length > 0) {\n            console.log(\"card form false\");\n            setNewCardForm(false);\n            setPaymentMethods(cards.data.data.paymentMethods.data);\n          } else {\n            console.log(\"card form true \");\n            setNewCardForm(true);\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleSetBilling = async () => {\n    console.log(name);\n\n    try {\n      const response = await EmailPoster.post(\"/billing/\", {\n        id: cusID,\n        name,\n        address: {\n          line1: addressOne,\n          line2: addressTwo,\n          city,\n          state,\n          postal_code: zip\n        }\n      });\n      setBilling(response.data.data);\n      setBillingExists(true);\n\n      try {\n        const cards = await Cards.post(\"/\", {\n          id: response.data.data.customer.id\n        });\n\n        if (cards.data.data.paymentMethods.data != null) {\n          setPaymentMethods(cards.data.data.paymentMethods.data);\n        } else {\n          setNewCardForm(true);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } catch (err) {} //load saved cards\n\n  };\n\n  const editEmail = async () => {\n    setCusID(\"\");\n    setEmailEntered(false);\n    setEmail(\"\");\n    setBilling([]);\n    setBillingExists(false);\n    setPaymentMethods([]);\n  };\n\n  const editBilling = async () => {\n    setBillingExists(false);\n  };\n\n  const cancelEditBilling = async () => {\n    setBillingExists(true);\n  }; // Hook\n\n\n  function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    }); // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n        setStoredValue(valueToStore); // Save to local storage\n\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n\n    return [storedValue, setValue];\n  }\n\n  function isNumeric(n) {\n    return !isNaN(parseInt(n)) && isFinite(n);\n  }\n\n  function selectPM(paymentMethod) {\n    setSelectedCard(paymentMethod);\n    setDisabled(false);\n  }\n\n  const requestCode = async () => {\n    setPhone(phone);\n    setPhoneRequested(true);\n    console.log(\"requesting code\");\n    console.log(\"phone: \" + phone); //setCodeRequested(true);\n\n    try {\n      const verify = await StartVerify.post(\"/\", {\n        phone\n      });\n      console.log(verify);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const verifyCode = async () => {\n    console.log(\"verifying code: \" + otp.join(\"\")); //setCodeRequested(true);\n\n    try {\n      const verify = await CheckCode.post(\"/\", {\n        phone,\n        code: otp.join(\"\")\n      });\n      console.log(JSON.stringify(verify));\n\n      if (verify.data) {\n        //setPhoneEntered true\n        setPhoneEntered(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }, storeName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, emailEntered ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4 mb-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 51\n    }\n  }, email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    onClick: editEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 62\n    }\n  }, \"edit\"))), phoneEntered ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 51\n    }\n  }, phone)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 62\n    }\n  }, \"edit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 25\n    }\n  }, \" \", billingExists ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 58\n    }\n  }, billing.customer.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 58\n    }\n  }, billing.customer.address.line1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 58\n    }\n  }, billing.customer.address.line2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 58\n    }\n  }, billing.customer.address.city)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 58\n    }\n  }, billing.customer.address.state)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 58\n    }\n  }, billing.customer.address.zip))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: editBilling,\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 70\n    }\n  }, \"edit\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 37\n    }\n  }, \"Enter Billing Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: addressOne,\n    onChange: e => setAddressOne(e.target.value),\n    placeholder: \"Address Line 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 67\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: addressTwo,\n    onChange: e => setAddressOne(e.target.value),\n    placeholder: \"Address Line 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 67\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: state,\n    onChange: e => setState(e.target.value),\n    placeholder: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 67\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: city,\n    onChange: e => setCity(e.target.value),\n    placeholder: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 67\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: zip,\n    onChange: e => setZip(e.target.value),\n    placeholder: \"Zip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 67\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSetBilling,\n    className: \"btn btn-primary  btn-block \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 67\n    }\n  }, \"Save Address\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 37\n    }\n  }, billing ? null : billing.customer.name != false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 94\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cancelEditBilling,\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 131\n    }\n  }, \"cancel\")) : null)))) : /*#__PURE__*/React.createElement(React.Fragment, null, phoneRequested ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(OTP, {\n    otp: otp,\n    setOtp: setOtp,\n    verifyCode: verifyCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 37\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PhoneInput, {\n    placeholder: \"Enter phone number\",\n    value: phone,\n    onChange: setPhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: requestCode,\n    className: \"row btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 54\n    }\n  }, \"Verify Phone to retrieve saved payment data\"))))))), newCardForm && billingExists ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4 mb-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 29\n    }\n  }, \"Save a New Card\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 29\n    }\n  }, \"so you don't have to enter it next time!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardForm, {\n    setError: setError,\n    setDisabled: setDisabled,\n    setClientSecret: setClientSecret,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 29\n    }\n  }), paymentMethods.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setNewCardForm(false),\n    className: \"btn btn-link d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 80\n    }\n  }, \"Back to Saved Cards\")) : null)) : billingExists && !newCardForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center mt-4 mb-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 33\n    }\n  }, \"Saved Cards\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 29\n    }\n  }, paymentMethods.map(paymentMethod => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onChange: e => selectPM(paymentMethod),\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 67\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 62\n      }\n    }, paymentMethod.card.brand, \" - \", paymentMethod.card.last4)));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setNewCardForm(true),\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 56\n    }\n  }, \"Add a new card\")))) : null) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 25\n    }\n  }, \"Quick checkout\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 25\n    }\n  }, \"Enter your email address to log in or sign up.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Email address\",\n    type: \"text\",\n    className: \"mt-2 mb-2 form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEmailSet,\n    className: \"mt-2 mb-2 btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 29\n    }\n  }, \"Continue with TapPay\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-nowrap card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 25\n    }\n  }, \"Order Details\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 33\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 37\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 37\n      }\n    }, \"$\", item.price / 100)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 33\n    }\n  }, \"Subtotal\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 33\n    }\n  }, \"$\", subtotal / 100))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 33\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 33\n    }\n  }, \"$\", shipping / 100))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 33\n    }\n  }, \"Taxes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 33\n    }\n  }, \"$\", taxes / 100))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 33\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 33\n    }\n  }, \"$\", total / 100)))), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: paymentIntent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: succeeded ? \"p-4 row justified-content-center result-message hidden\" : \"p-4 row justified-content-center result-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: processing || disabled || succeeded,\n    className: \"col btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 160\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 25\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 29\n    }\n  }) : \"Pay Now\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-error\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 25\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: succeeded ? \"p-4 justify-content-center result-message\" : \"p-4 justify-content-center result-message hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 25\n    }\n  }, \"Payment succeeded! Redirecting to checkout summary\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: returnURL,\n    className: \"btn btn-link p-0 m-0 d-inline align-baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 47\n    }\n  }, \"Back\")))));\n};\n\nexport default Tap;","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/Tap.jsx"],"names":["React","Component","useEffect","useState","useParams","OrderFinder","EmailPoster","Cards","CardElement","useStripe","useElements","CardForm","PaymentIntent","PhoneInput","StartVerify","CheckCode","OTP","Tap","otp","setOtp","Array","fill","phoneRequested","setPhoneRequested","id","items","setItems","acctID","setAcctId","useLocalStorage","storeName","setStoreName","successURL","setSuccessURL","returnURL","setReturnURL","subtotal","setSubtotal","shipping","setShipping","taxes","setTaxes","total","setTotal","name","setName","addressOne","setAddressOne","addressTwo","setAddressTwo","city","setCity","state","setState","zip","setZip","phone","setPhone","phoneEntered","setPhoneEntered","fullName","setFullName","email","setEmail","emailEntered","setEmailEntered","newCardForm","setNewCardForm","phoneVerified","setPhoneVerified","cusID","setCusID","paymentMethods","setPaymentMethods","billing","setBilling","billingExists","setBillingExists","disabled","setDisabled","succeeded","setSucceeded","error","setError","processing","setProcessing","clientSecret","setClientSecret","selectedCard","setSelectedCard","stripe","elements","code","setCode","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","fetchData","response","get","data","order","acctid","storename","returnurl","err","console","log","post","customer","cards","length","paymentIntent","e","preventDefault","pi","amount","account","JSON","stringify","handleSubmit","payload","confirmCardPayment","payment_method","card","getElement","message","handleEmailSet","handlePhoneSet","handleEmailPhoneSet","handleSetBilling","address","line1","line2","postal_code","editEmail","editBilling","cancelEditBilling","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","parse","setValue","value","valueToStore","Function","setItem","isNumeric","n","isNaN","parseInt","isFinite","selectPM","paymentMethod","requestCode","verify","verifyCode","join","target","map","brand","last4","price"],"mappings":"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","sourcesContent":["import React , {Component, useEffect, useState} from 'react';\nimport { useParams} from \"react-router-dom\";\nimport OrderFinder from '../apis/OrderFinder';\nimport EmailPoster from '../apis/EmailPoster';\nimport Cards from '../apis/Cards';\nimport {\n    CardElement,\n    useStripe,\n    useElements\n  } from \"@stripe/react-stripe-js\";\nimport CardForm from './CardForm';\nimport PaymentIntent from '../apis/PaymentIntent';\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport StartVerify from '../apis/StartVerify';\nimport CheckCode from '../apis/CheckCode';\n\nimport OTP from \"./OTP\";\n\n\n\n\nconst Tap = () => {\n    \n    const [otp, setOtp] = useState(new Array(6).fill());\n    const [phoneRequested, setPhoneRequested] = useState(false);\n    \n    const {id} = useParams();\n\n    //from server response\n    const [items, setItems] = useState([]);\n    const [acctID, setAcctId] = useLocalStorage(\"acctID\", \"\");\n    const [storeName, setStoreName] = useState(\"\");\n    const [successURL, setSuccessURL] = useState(\"\");\n    const [returnURL, setReturnURL] = useState(\"\");\n    const [subtotal, setSubtotal] = useState(0);\n    const [shipping, setShipping] = useState(0);\n    const [taxes, setTaxes] = useState(0);\n    const [total, setTotal] = useState(0);\n\n    \n    \n    //billing fields\n    \n    const [name, setName] = useState(\"\");\n    const [addressOne, setAddressOne] = useState(\"\");\n    const [addressTwo, setAddressTwo] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [zip, setZip] = useState(\"\");\n\n    //from customer\n   \n    const [phone, setPhone] = useState(\"\");\n    const [phoneEntered, setPhoneEntered] = useState(false);\n    const [fullName, setFullName] = useLocalStorage(\"\");\n    const [email, setEmail] = useLocalStorage(\"email\", \"\");\n    const [emailEntered, setEmailEntered] = useLocalStorage('emailEntered', false);\n    const [newCardForm, setNewCardForm] = useLocalStorage();\n    const [phoneVerified, setPhoneVerified] = useLocalStorage('phoneVerified', false);\n   \n\n    //from stripe\n    const [cusID, setCusID] = useLocalStorage(\"\");\n    const [paymentMethods, setPaymentMethods] = useState([]);\n    const [billing, setBilling] = useLocalStorage({});\n    const [billingExists, setBillingExists] = useLocalStorage('billingExists', false);\n\n    const [disabled, setDisabled] = useState(true);\n    const [succeeded, setSucceeded] = useState(false);\n    const [error, setError] = useState(null);\n    const [processing, setProcessing] = useState('');\n    const [clientSecret, setClientSecret] = useState();\n    const [selectedCard, setSelectedCard] = useState();\n    const stripe = useStripe();\n    const elements = useElements();\n    const [code, setCode] = useState(\"\");\n    \n\n\n    const cardStyle = {\n        style: {\n          base: {\n            color: \"#32325d\",\n            fontFamily: 'Arial, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n              color: \"#32325d\"\n            }\n          },\n          invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\"\n          }\n        }\n      };\n\n    useEffect( () => {\n        \n        const fetchData = async () => {\n        \n        \n        try {\n            const response = await OrderFinder.get(\"/\"+id);\n            setItems(response.data.data.items)\n            setAcctId(response.data.data.order[0].acctid);\n            setStoreName(response.data.data.order[0].storename);\n            setSubtotal(response.data.data.order[0].subtotal);\n            setShipping(response.data.data.order[0].shipping);\n            setTaxes(response.data.data.order[0].taxes);\n            setTotal(response.data.data.order[0].total);\n            setSuccessURL(response.data.data.order[0].successURL);\n            setReturnURL(response.data.data.order[0].returnurl);\n         } catch(err){\n           console.log(err)\n         }\n            //look up billing info \n            try{\n            const response = await EmailPoster.post(\"/check/\", {\n                phone,\n                email\n            })\n            \n            setCusID(response.data.data.customer.id)\n            \n            if(response.data.data.customer.name != null){\n                //console.log(\"setting billing: \"+JSON.stringify(response.data.data))\n                setBilling(response.data.data);\n                setBillingExists(true)\n                //if billing, look up cards\n                try {\n                    const cards = await Cards.post(\"/\", {\n                        id: response.data.data.customer.id\n                    });\n                    //console.log(\"cards: \"+JSON.stringify(cards.data.data.paymentMethods.data))\n                    if(cards.data.data.paymentMethods.data.length > 0){\n                        setNewCardForm(false)\n                        setPaymentMethods(cards.data.data.paymentMethods.data)\n                        \n                    }\n                    else{\n                        console.log(\"card form true \")\n                        setNewCardForm(true);\n                    }\n                       \n                 } catch(err){\n                   console.log(err)\n                 }\n                 \n                \n                \n            }\n            \n        } catch(err){\n            console.log(err)\n        }\n        \n       }\n       fetchData();\n\n    },[]);\n\n    const paymentIntent = async (e) => {\n  \n        e.preventDefault();\n        console.log(\"creating payment intent\")\n        try {\n            const pi = await PaymentIntent.post(\"/\", {\n                \n                    amount : total,\n                    customer : cusID,\n                    account: acctID,\n                \n            });\n            console.log(\"payment intent created\"+JSON.stringify(pi))\n            handleSubmit(pi.data.clientSecret);\n        }\n        catch (err){\n            console.log(error)\n        }\n              \n           \n      }\n      \n        const handleSubmit = async (clientSecret) => {\n          console.log(\"confirming payment\")\n          setProcessing(true);\n          const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: (newCardForm ? {\n                card : elements.getElement(CardElement) \n              } : selectedCard.id) \n          });\n          if (payload.error) {\n            setError(`Payment failed ${payload.error.message}`);\n            setProcessing(false);\n          } else {\n              \n            setError(null);\n            setProcessing(false);\n            setSucceeded(true);\n           \n          }\n        };\n      \n\n\n    const handleEmailSet = async () => {\n        if(email != \"\"){\n            setEmail(email)\n            setEmailEntered(true)\n        }\n        \n    }\n\n    const handlePhoneSet = async () => {\n        setPhone(phone);\n        setPhoneVerified(true);\n        //call handleEmailPhoneSet\n        //handleEmailPhoneSet();\n    }\n\n\n\n    const handleEmailPhoneSet = async () => {\n        \n        try{\n            const response = await EmailPoster.post(\"/check/\", {\n                email,\n                phone\n            })\n           console.log(\"cusID: \"+response.data.data.customer.id) \n            setCusID(response.data.data.customer.id)\n            \n            if(response.data.data.customer.name != null){\n                setBilling(response.data.data);\n                setBillingExists(true)\n                //if billing, look up cards\n                try {\n                    const cards = await Cards.post(\"/\", {\n                        id: response.data.data.customer.id\n                    });\n                    \n                    if(cards.data.data.paymentMethods.data.length > 0){\n                        console.log(\"card form false\")\n                        setNewCardForm(false)\n                        setPaymentMethods(cards.data.data.paymentMethods.data)\n                        \n                    }\n                    else{\n                        console.log(\"card form true \")\n                        setNewCardForm(true);\n                    }\n                       \n                 } catch(err){\n                   console.log(err)\n                 }\n                 \n                \n                \n            }\n            \n        } catch(err){\n            console.log(err)\n        }\n        \n        \n    };\n\n    const handleSetBilling = async () => {\n        console.log(name)\n        try{\n            const response = await EmailPoster.post(\"/billing/\", {\n                    id: cusID,\n                    name,\n                    address : {\n                        line1 : addressOne,\n                        line2 : addressTwo,\n                        city,\n                        state,\n                        postal_code : zip\n                    },\n                \n            })\n            \n            setBilling(response.data.data)\n            setBillingExists(true)\n            try {\n                const cards = await Cards.post(\"/\", {\n                    id: response.data.data.customer.id\n                });\n                \n                if(cards.data.data.paymentMethods.data!= null){\n                    setPaymentMethods(cards.data.data.paymentMethods.data)\n                }\n                else{\n                    setNewCardForm(true);\n                }\n                   \n             } catch(err){\n               console.log(err)\n             }\n        } catch(err){\n\n        }\n        //load saved cards\n        \n        \n    };\n\n    const editEmail = async () => {\n        setCusID(\"\")\n        setEmailEntered(false)\n        setEmail(\"\")\n        setBilling([])\n        setBillingExists(false);\n        setPaymentMethods([])\n    };\n\n    const editBilling = async () => {\n        setBillingExists(false);\n    };\n\n    const cancelEditBilling = async () => {\n        setBillingExists(true);\n    };\n\n\n    \n\n    // Hook\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n  \n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n    return [storedValue, setValue];\n  }\n\n  function isNumeric(n) {\n    return !isNaN(parseInt(n)) && isFinite(n);\n}\nfunction selectPM(paymentMethod){\n    setSelectedCard(paymentMethod);\n    setDisabled(false)\n}\n\nconst requestCode = async () => {\n    setPhone(phone);\n    setPhoneRequested(true)\n    \n    console.log(\"requesting code\")\n    console.log(\"phone: \"+phone)\n    //setCodeRequested(true);\n    try {\n        const verify = await StartVerify.post(\"/\", {\n            phone\n        });\n        console.log(verify)\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nconst verifyCode = async () => {\n    \n    console.log(\"verifying code: \" +otp.join(\"\"))\n   \n    //setCodeRequested(true);\n    try {\n        const verify = await CheckCode.post(\"/\", {\n            phone,\n            code: otp.join(\"\")\n        });\n        console.log(JSON.stringify(verify))\n        if(verify.data){\n            //setPhoneEntered true\n            \n            setPhoneEntered(true)\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n    return (\n        <>\n         \n        <div className=\"text-center\">\n            <h1>{storeName}</h1>\n            \n        </div>\n             \n        \n        <div className=\"row \">\n            <div className=\"col-sm-12\">\n              \n\n            {emailEntered ? \n            <>\n            <div className=\"card mt-4 mb-4 \">\n                <div className=\"card-body\">\n                    \n                    <div className=\"row mt-4\">\n                        <div className=\"col-sm-4\">Email</div>\n                        <div className=\"col-sm-4\"><span>{email}</span></div>\n                        <div className=\"col-sm-2 text-right\"><button className=\"btn btn-link p-0 m-0 d-inline align-baseline\"onClick={editEmail}>edit</button></div>\n                    </div> \n                        {phoneEntered ?  \n                        <>\n                        <div className=\"row mt-4\">\n                        <div className=\"col-sm-4\">Phone</div>\n                        <div className=\"col-sm-4\"><span>{phone}</span></div>\n                        <div className=\"col-sm-2 text-right\"><button className=\"btn btn-link p-0 m-0 d-inline align-baseline\" >edit</button></div>\n                        </div> \n                        \n                        <div> {billingExists ? \n                        \n                            <div className=\"row mt-4\">\n                                <div className=\"col-sm-4\">Billing Address</div>\n                                <div className=\"col-sm-4\"> \n    \n                                    <div className=\"row\"><span>{billing.customer.name}</span></div>\n                                    <div className=\"row\"><span>{billing.customer.address.line1}</span></div>\n                                    <div className=\"row\"><span>{billing.customer.address.line2}</span></div>\n                                    <div className=\"row\"><span>{billing.customer.address.city}</span></div>\n                                    <div className=\"row\"><span>{billing.customer.address.state}</span></div>\n                                    <div className=\"row\"><span>{billing.customer.address.zip}</span></div>\n                                </div>\n                                <div className=\"col-sm-2 text-right\"><button onClick={editBilling} className=\"btn btn-link p-0 m-0 d-inline align-baseline\" >edit</button></div>\n                                \n                            </div>\n                            \n                            :\n                            \n                             <div className=\"row mt-4\">\n                                 \n                                    <div className=\"col-sm-4\">Enter Billing Address</div>\n                                    <div className=\"col-sm-4\">\n                                        <div className=\"row mt-2\">\n                                            <input \n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)} \n                                        placeholder=\"Full Name\">\n                                            </input></div>\n                                        <div className=\"row mt-2\"><input \n                                        value={addressOne}\n                                        onChange={(e) => setAddressOne(e.target.value)} \n                                        placeholder=\"Address Line 1\"></input></div>\n                                        <div className=\"row mt-2\"><input \n                                        value={addressTwo}\n                                        onChange={(e) => setAddressOne(e.target.value)} \n                                        placeholder=\"Address Line 2\"></input></div> \n                                        <div className=\"row mt-2\"><input\n                                        value={state}\n                                        onChange={(e) => setState(e.target.value)} \n                                        placeholder=\"City\"></input></div> \n                                        <div className=\"row mt-2\"><input \n                                        value={city}\n                                        onChange={(e) => setCity(e.target.value)} \n                                        placeholder=\"State\"></input></div> \n                                        <div className=\"row mt-2\"><input \n                                        value={zip}\n                                        onChange={(e) => setZip(e.target.value)} \n                                        placeholder=\"Zip\"></input></div> \n                                        <div className=\"row mt-2\"><button onClick={handleSetBilling} className=\"btn btn-primary  btn-block \">Save Address</button></div>\n                                    \n                                    </div>\n                                    <div>\n                                        {billing ? null : (billing.customer.name!=false  ?   <div className=\"col-sm-2 text-right\"><button onClick={cancelEditBilling} className=\"btn btn-link p-0 m-0 d-inline align-baseline\" >cancel</button></div>\n                                    : null) }\n                                    </div>\n                                    \n                                \n                             </div>\n                            }</div>\n                            </>\n                        : \n                        \n                                <>\n                                {phoneRequested ? \n                                <>\n                                <div >\n                                <OTP otp={otp} setOtp={setOtp} verifyCode={verifyCode}></OTP>\n                                </div>\n                                \n                                </>\n                                \n                                :\n                                <>\n                                <div className=\"row\">\n                                    <div className=\"col\">Phone</div>\n                                    <div className=\"col\"><PhoneInput\n                                        placeholder=\"Enter phone number\"\n                                        value={phone}\n                                        onChange={setPhone}/>\n                                    </div>\n                                \n                                <div className=\"col\"><button onClick={requestCode} className=\"row btn btn-primary\" type=\"submit\">\n                                \n                                Verify Phone to retrieve saved payment data\n                                </button></div>\n                                </div>\n                                </>\n                                }\n                                \n                                \n                                </>\n                                \n                            \n                       }\n                        \n\n                        \n                    \n                        \n                    </div> \n                </div>    \n\n                    {newCardForm && billingExists ? \n                    <div className=\"card mt-4 mb-4 \">\n                        <div className=\"card-header text-center \">\n                            <h4  className=\"text-center\">Save a New Card</h4>\n                            <p>so you don't have to enter it next time!</p>\n                        </div>\n                        <div className=\"card-body\">\n                        \n                            <CardForm setError={setError} setDisabled={setDisabled} setClientSecret={setClientSecret}/>\n                        \n                        {paymentMethods.length > 0 ? <div className=\"col-sm-2\"><button onClick={() => setNewCardForm(false)} className=\"btn btn-link d-inline align-baseline\" >Back to Saved Cards</button></div> : null}\n                        </div>\n                    </div>\n                    \n                    : (billingExists && !newCardForm ? \n                \n                    <div className=\"card text-center mt-4 mb-4 \">\n                            <div className=\"card-header\">\n                                <h4  className=\"text-center\">Saved Cards</h4>\n                            </div>\n                            <div className=\"card-body \">\n                            {paymentMethods.map(paymentMethod=>{\n                                return(\n                                    <div onChange={(e) => selectPM(paymentMethod)} className=\"row \">\n                                        <div className=\"col-xs-3\"><input \n                                        type=\"radio\" \n                                        name=\"addon\" \n                                        /></div>\n                                        <div className=\"col\"><span>{paymentMethod.card.brand} - {paymentMethod.card.last4}</span></div>\n                                    </div>\n                                )\n                            })}\n                             <div className=\"row mt-2\"><button onClick={() => setNewCardForm(true)}className=\"btn btn-primary\">Add a new card</button></div>\n                            </div>\n                        </div> : null)}\n            </>\n               :\n              \n              <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Quick checkout</h5>\n                        <p>Enter your email address to log in or sign up.</p>\n                        <div className=\"\">\n                            \n                            <input \n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email address\"\n                            type=\"text\" \n                            className=\"mt-2 mb-2 form-control\" \n                            />\n                            <button onClick={handleEmailSet} className=\"mt-2 mb-2 btn btn-primary btn-block\">Continue with TapPay</button>   \n                        </div>\n                    </div>\n                   \n                </div> \n                }\n                \n        \n                <div className=\"mt-4 text-nowrap card\">\n                    <div className=\"card-header\">\n                        <h4  className=\"text-center\">Order Details</h4>\n                    </div>\n                                <ul className=\"list-group list-group-flush\">\n                    {items.map(item=>{\n                 return(  \n                                <li className=\"list-group-item\">\n                                    <div className=\"row\">\n                                    <div className=\"col\">{item.name}</div> \n                                    <div className=\"col text-right\">${item.price/100}</div>\n                                    </div>\n                                </li>\n                    )\n             })}\n                     </ul>\n                     <div className=\"card-body\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Subtotal</div> \n                                <div className=\"col text-right\">${subtotal/100}</div>\n                                </div>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Shipping</div> \n                                <div className=\"col text-right\">${shipping/100}</div>\n                                </div>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Taxes</div> \n                                <div className=\"col text-right\">${taxes/100}</div>\n                                </div>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <div className=\"row\">\n                                <div className=\"col\">Total</div> \n                                <div className=\"col text-right\">${total/100}</div>\n                                </div>\n                            </li>\n                        </ul>\n                        <form id=\"payment-form\" onSubmit={paymentIntent}>\n                    <div className={succeeded ? \"p-4 row justified-content-center result-message hidden\" : \"p-4 row justified-content-center result-message\" }><button\n                        disabled={processing || disabled || succeeded}\n                        className=\"col btn btn-primary\"\n                    >\n                        <span id=\"button-text\">\n                        {processing ? (\n                            <div className=\"spinner\" id=\"spinner\"></div>\n                        ) : (\n                            \"Pay Now\"\n                        )} \n                        </span>\n                    </button></div>\n                    {/* Show any error that happens when processing the payment */}\n                    {error && (\n                        <div className=\"card-error\" role=\"alert\">\n                        {error}\n                        </div>\n                    )}\n                    <div className={succeeded ? \"p-4 justify-content-center result-message\" : \"p-4 justify-content-center result-message hidden\"}>\n                        <div className=\"row\">\n                        </div>\n                        <div className=\"row\">\n                        <p>\n                        Payment succeeded! Redirecting to checkout summary\n                        </p>\n                        </div>\n                    </div>\n                    </form>\n                    </div>\n                \n            </div>\n\n            <div className=\"mt-4 text-center\"><a href={returnURL} className=\"btn btn-link p-0 m-0 d-inline align-baseline\">Back</a></div>\n            </div>\n         \n          </div>\n            \n        </>\n    )\n}\n\nexport default Tap;\n"]},"metadata":{},"sourceType":"module"}